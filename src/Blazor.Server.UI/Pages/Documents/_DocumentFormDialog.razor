@using CleanArchitecture.Blazor.Application.Features.Documents.Commands.AddEdit
@using SixLabors.ImageSharp
@using SixLabors.ImageSharp.Formats
@using SixLabors.ImageSharp.Processing
@inherits MudComponentBase
@inject IStringLocalizer<Documents> L
<MudDialog>
    <DialogContent>
        <MudForm Model="model" @ref="_form" Validation="@(modelValidator.ValidateValue)">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="@L["Title"]" @bind-Value="model.Title"
                                  For="@(() => model.Title)"
                                  Required="true"
                                  RequiredError="@L["Title is required!"]">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudSelect Label="@L["Select Document Type"]"
                               For="@(() => model.DocumentType)"
                               Required="true"
                               RequiredError="@L["Document type is required!"]"
                               @bind-Value="model.DocumentType">
                        @foreach (var doctype in Enum.GetValues<DocumentType>())
                        {
                            <MudSelectItem Value="@doctype">@doctype</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="@L["Description"]"
                                  For="@(() => model.Description)"
                                  @bind-Value="model.Description"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="@L["Content"]"
                                  Lines="3" ReadOnly
                                  For="@(() => model.Content)"
                                  @bind-Value="model.Content"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="6">
                   <MudTextField Label="@L["Job Status"]"
                                For="@(() => model.Status)"
                                ReadOnly
                                @bind-Value="model.Status"></MudTextField>
                </MudItem>
                <MudItem xs="12" sm="6">
                   <MudCheckBox Label="@L["Is Public"]"
                                For="@(() => model.IsPublic)"
                                @bind-Checked="model.IsPublic"></MudCheckBox>
                </MudItem>
                <MudItem>
                    <MudImage  Fluid="true" Src="@model.URL" Alt="@model.Description" Class="rounded-lg"/>
                </MudItem>
                
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@ButtonText.CANCEL</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">@ButtonText.OK</MudButton>
    </DialogActions>
</MudDialog>

@code {
    MudForm? _form = default!;
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;
    AddEditDocumentCommandValidator modelValidator = new AddEditDocumentCommandValidator();
    [EditorRequired][Parameter] public AddEditDocumentCommand model { get; set; } = default!;


    async Task Submit()
    {
        if (_form is not null)
        {
            await _form.Validate();
            if (_form.IsValid)
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
    }
    void Cancel() => MudDialog.Cancel();
}
