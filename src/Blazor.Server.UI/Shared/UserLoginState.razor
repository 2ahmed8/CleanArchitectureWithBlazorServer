@using CleanArchitecture.Blazor.Infrastructure.Hubs
@implements IDisposable
@code{
   
    public void Dispose()
    {
        _client.Login -= _client_Login;
        _client.Logout -= _client_Logout;
       
    }
    [Inject]
    private HubClient _client { get; set; } = default!;
    protected override async Task OnInitializedAsync()
    {
        _client.Login += _client_Login;
        _client.Logout += _client_Logout;
            await _client.StartAsync().ConfigureAwait(false);
    }
   
    private void _client_Login(object? sender, string username)
    {
        InvokeAsync(async () =>
        {
            Snackbar.Add($"{username} login.", MudBlazor.Severity.Info);
            
        });
    }

    private void _client_Logout(object? sender, string username)
    {
        InvokeAsync(async () =>
        {
            Snackbar.Add($"{username} logout.", MudBlazor.Severity.Normal);
            
        });
    }
}


