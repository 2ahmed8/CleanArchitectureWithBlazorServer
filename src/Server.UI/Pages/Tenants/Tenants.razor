@page "/system/tenants"
@using CleanArchitecture.Blazor.Application.Features.Tenants.DTOs
@using CleanArchitecture.Blazor.Application.Features.Tenants.Queries.Pagination
@using CleanArchitecture.Blazor.Application.Features.Tenants.Caching
@using CleanArchitecture.Blazor.Application.Features.Tenants.Commands.AddEdit
@using CleanArchitecture.Blazor.Application.Features.Tenants.Commands.Delete
@using CleanArchitecture.Blazor.Infrastructure.Constants.Permission


@inject IJSRuntime JS
@inject IStringLocalizer<Tenants> L
@attribute [Authorize(Policy = Permissions.Tenants.View)]
<PageTitle>@Title</PageTitle>
<style>
    .mud-table-toolbar {
        height: 120px !important;
    }
</style>

<MudDataGrid ServerData="@(ServerReload)"
             FixedHeader="true"
             FixedFooter="false"
             Height="calc(100vh - 300px)"
             Loading="@_loading"
             @bind-RowsPerPage="_defaultPageSize"
             MultiSelection="true"
             @bind-SelectedItems="_selectedItems"
             @bind-SelectedItem="_currentDto"
             Hover="true" @ref="_table">
    <ToolBarContent>
        <div class="d-flex align-start flex-grow-1">
            <div class="d-flex gap-4">
                <MudIcon Icon="@Icons.Material.Filled.Domain" Size="Size.Large" />
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.caption">@Title</MudText>
                </div>
            </div>
            <div class="flex-grow-1" />
            <div class="d-flex flex-column justify-end">
                <div class="d-flex">
                    <MudHidden Breakpoint="Breakpoint.SmAndDown">
                        <MudButton DisableElevation Variant="Variant.Outlined"
                                    Size="Size.Small"
                                    Disabled="@_loading"
                                    OnClick="@(()=>OnRefresh())"
                                    StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Primary"
                                    Style="margin-right: 4px; margin-bottom:4px">@ConstantString.Refresh</MudButton>
                         @if (_canCreate)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Add"
                                        Disabled="@_loading"
                                        Size="Size.Small"
                                        OnClick="OnCreate"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">@ConstantString.New</MudButton>
                        }
                        @if (_canDelete)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Error"
                                        StartIcon="@Icons.Material.Filled.Delete"
                                        Disabled="@(!(_selectedItems.Count>0))"
                                        Size="Size.Small"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        OnClick="OnDeleteChecked"
                                        IconColor="Color.Surface">@ConstantString.Delete</MudButton>
                        }

                    </MudHidden>
                    <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                        <MudMenu AnchorOrigin="Origin.BottomLeft" StartIcon="@Icons.Material.Filled.KeyboardCommandKey" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" Label="@L["Action"]" Color="Color.Primary" Variant="Variant.Filled">
                            <MudMenuItem Disabled="@_loading" OnClick="@(()=>OnRefresh())">@ConstantString.Refresh</MudMenuItem>
                            @if (_canCreate)
                            {
                                <MudMenuItem Disabled="@_loading" OnClick="OnCreate">@ConstantString.New</MudMenuItem>
                            }
                            @if (_canDelete)
                            {
                                <MudMenuItem OnClick="OnDeleteChecked">@ConstantString.Delete</MudMenuItem>
                            }

                        </MudMenu>
                    </MudHidden>
                </div>
                @if (_canSearch)
                {
                    <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Value="@_searchString" Placeholder="@ConstantString.Search" Adornment="Adornment.End"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0"></MudTextField>
                }

            </div>
        </div>
    </ToolBarContent>
    <Columns>
        <SelectColumn ShowInFooter="false">                 </SelectColumn>
        <TemplateColumn CellStyle="width:60px" Title="@ConstantString.Actions" Sortable="false">
            <CellTemplate>
                @if (_canEdit || _canDelete)
                {
                    <MudMenu Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" DisableElevation="true" Size="Size.Small"
                             Dense="true"
                             EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Info" AnchorOrigin="Origin.CenterLeft">
                        @if (_canEdit)
                        {
                            <MudMenuItem OnClick="@(()=>OnEdit(context.Item))">@ConstantString.Edit</MudMenuItem>
                        }
                        @if (_canDelete)
                        {
                            <MudMenuItem OnClick="@(()=>OnDelete(context.Item))">@ConstantString.Delete</MudMenuItem>
                        }
                    </MudMenu>
                }
                else
                {
                    <MudButton Variant="Variant.Filled" DisableElevation="true"
                               StartIcon="@Icons.Material.Filled.DoNotTouch" IconColor="Color.Secondary" Size="Size.Small"
                               Color="Color.Surface">
                        @ConstantString.NoAllowed
                    </MudButton>
                }
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn CellStyle="width:300px" Property="x => x.Id" Title="@L[_currentDto.GetMemberDescription(x=>x.Id)]">
            <FooterTemplate>
                @L["Selected"]: @(this._selectedItems.Count)
            </FooterTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Name" Title="@L[_currentDto.GetMemberDescription(x=>x.Name)]">
            <CellTemplate>
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.body2">@context.Item.Name</MudText>
                    <MudText Typo="Typo.body2" Class="mud-text-secondary">@context.Item.Description</MudText>
                </div>
            </CellTemplate>
        </PropertyColumn>

    </Columns>

    <PagerContent>
        <MudDataGridPager PageSizeOptions="@(new int[]{10,15,30,50,100,500,1000})" />
    </PagerContent>
</MudDataGrid>


