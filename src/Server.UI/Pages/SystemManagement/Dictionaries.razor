@page "/system/picklist"
@using CleanArchitecture.Blazor.Application.Features.KeyValues.DTOs
@using CleanArchitecture.Blazor.Application.Features.KeyValues.Queries.Export
@using CleanArchitecture.Blazor.Application.Features.KeyValues.Queries.PaginationQuery
@using BlazorDownloadFile
@using CleanArchitecture.Blazor.Infrastructure.Constants.Permission
@using CleanArchitecture.Blazor.Application.Features.KeyValues.Caching
@using CleanArchitecture.Blazor.Application.Features.KeyValues.Commands.AddEdit
@using CleanArchitecture.Blazor.Application.Features.KeyValues.Commands.Delete
@using CleanArchitecture.Blazor.Application.Features.KeyValues.Commands.Import
@using CleanArchitecture.Blazor.Domain.Enums

@attribute [Authorize(Policy = Permissions.Dictionaries.View)]
@inject IStringLocalizer<Dictionaries> L
@inject IJSRuntime JS
<PageTitle>@Title</PageTitle>
<style>
    .mud-table-toolbar {
        height: 120px !important;
    }
</style>

<MudDataGrid @ref="_table" FixedHeader="true"
             FixedFooter="false"
             @bind-RowsPerPage="_defaultPageSize"
             Height="calc(100vh - 300px)"
             Hover="true"
             MultiSelection="true"
             @bind-SelectedItems="_selectedItems"
             @bind-SelectedItem="SelectedItem"
             ReadOnly="false"
             EditMode="DataGridEditMode.Cell"
             T="KeyValueDto"
             CommittedItemChanges="@CommittedItemChanges"
             ServerData="@(ServerReload)">
    <ToolBarContent>
        <div class="d-flex align-start flex-grow-1">
            <div class="d-flex gap-4">
                <MudIcon Icon="@Icons.Material.Filled.ViewList" Size="Size.Large" />
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.caption">@Title</MudText>

                </div>
            </div>
            <div class="flex-grow-1" />

            <div class="d-flex flex-column justify-end">
                <div class="d-flex">
                    <MudHidden Breakpoint="Breakpoint.SmAndDown">
                        <MudButton DisableElevation Variant="Variant.Outlined"
                                    Size="Size.Small"
                                    OnClick="OnRefresh"
                                    Disabled="@_loading"
                                    StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Primary"
                                    Style="margin-right: 4px; margin-bottom:4px">@ConstantString.Refresh</MudButton>
                         @if (_canCreate)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Add"
                                        Size="Size.Small"
                                        OnClick="OnCreate"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">@ConstantString.New</MudButton>
                        }
                        @if (_canDelete)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Secondary"
                                        StartIcon="@Icons.Material.Filled.Delete"
                                        Disabled="@(!(_selectedItems.Count>0))"
                                        OnClick="OnDeleteChecked"
                                        Size="Size.Small"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">@ConstantString.Delete</MudButton>
                        }
                        @if (_canImport)
                        {
                            <MudButton Disabled="@_uploading" DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Upload"
                                        Size="Size.Small"
                                        Style="margin-right:4px; margin-bottom:4px"
                                        for="importdataInput"
                                        HtmlTag="label"
                                        IconColor="Color.Surface">
                                 @if (_uploading)
                                {
                                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                    <MudText Class="ms-2"> @ConstantString.Uploading</MudText>
                                }
                                else
                                {
                                    <MudText>@ConstantString.Import</MudText>
                                }

                            </MudButton>
                            <InputFile id="importdataInput" OnChange="OnImportData" hidden accept=".xlsx" />
                        }
                        @if (_canExport)
                        {
                            <MudButton Disabled="@_downloading" DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Download"
                                        Size="Size.Small"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        OnClick="OnExport"
                                        IconColor="Color.Surface">
                                 @if (_downloading)
                                {
                                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                    <MudText Class="ms-2"> @ConstantString.Downloading</MudText>
                                }
                                else
                                {
                                    <MudText>@ConstantString.Export</MudText>
                                }
                            </MudButton>
                        }
                    </MudHidden>
                    <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                        @if (_canCreate)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Add"
                                        Size="Size.Small"
                                        OnClick="OnCreate"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">@ConstantString.New</MudButton>
                        }
                        @if (_canDelete)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Secondary"
                                        StartIcon="@Icons.Material.Filled.Delete"
                                        Disabled="@(!(_selectedItems.Count>0))"
                                        OnClick="OnDeleteChecked"
                                        Size="Size.Small"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">@ConstantString.Delete</MudButton>
                        }
                    </MudHidden>
                </div>
                @if (_canSearch)
                {
                    <MudStack Row="true" AlignItems="AlignItems.Stretch">
                        <MudEnumSelect TEnum="Picklist?" Placeholder="Search for picklist" Value="@_searchPicklist" Clearable="true" ValueChanged="@(s=>OnSearch(s))" Style="width:160px" FullWidth="true"> </MudEnumSelect>
                        <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Value="@_searchString" Placeholder="Search" Adornment="Adornment.End" Style="min-width:260px" FullWidth="true"
                                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small"></MudTextField>
                    </MudStack>
                }

            </div>
        </div>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Name" Title="@L[SelectedItem.GetMemberDescription(x=>x.Name)]">
            <EditTemplate>
                <MudEnumSelect @bind-Value="@context.Item.Name" TEnum="Picklist" Required="true">
                </MudEnumSelect>
            </EditTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Value" Title="@L[SelectedItem.GetMemberDescription(x=>x.Value)]" />
        <PropertyColumn Property="x => x.Text" Title="@L[SelectedItem.GetMemberDescription(x=>x.Text)]" />
        <PropertyColumn Property="x => x.Description" Title="@L[SelectedItem.GetMemberDescription(x=>x.Description)]" />
        <TemplateColumn CellStyle="width:60px" Title="@ConstantString.Delete" Sortable="false">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Secondary" Disabled="@(!_canDelete)" Size="Size.Small" OnClick="@(()=>DeleteItem(context.Item))" />
            </CellTemplate>
            <EditTemplate>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Secondary" Disabled="@(!_canDelete)" Size="Size.Small" OnClick="@(()=>DeleteItem(context.Item))" />
            </EditTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager PageSizeOptions="@(new int[]{10,15,30,50,100,500,1000})" />
    </PagerContent>
</MudDataGrid>



