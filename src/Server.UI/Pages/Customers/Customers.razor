@page "/pages/Customers"

@using BlazorDownloadFile
@using CleanArchitecture.Blazor.Application.Features.Customers.Caching
@using CleanArchitecture.Blazor.Application.Features.Customers.DTOs
@using CleanArchitecture.Blazor.Application.Features.Customers.Commands.Delete
@using CleanArchitecture.Blazor.Application.Features.Customers.Commands.Import
@using CleanArchitecture.Blazor.Application.Features.Customers.Queries.Export
@using CleanArchitecture.Blazor.Application.Features.Customers.Queries.Pagination
@using CleanArchitecture.Blazor.Application.Features.Customers.Specifications
@using CleanArchitecture.Blazor.Application.Features.Customers.Commands.AddEdit

@inherits FluxorComponent
@inject IJSRuntime JS
@inject IStringLocalizer<Customers> L
@attribute [Authorize(Policy = Permissions.Customers.View)]
<PageTitle>@Title</PageTitle>
<style>
    .mud-table-toolbar {
        height: 120px !important;
    }
</style>


       <MudDataGrid ServerData="@(ServerReload)"
                  FixedHeader="true"
                  FixedFooter="true"
                  Virtualize="true"
                  @bind-RowsPerPage="_defaultPageSize"
                  Height="calc(100vh - 330px)"
                  Loading="@_loading"
                  MultiSelection="true"
                  @bind-SelectedItems="_selectedItems"
                  @bind-SelectedItem="_currentDto"
                  Hover="true" @ref="_table">
            <ToolBarContent>
                 <div class="d-flex align-start flex-grow-1">
                        <div class="d-flex gap-4">
                            <MudIcon Icon="@Icons.Material.Filled.Window" Size="Size.Large" />
                            <div class="d-flex flex-column">
                                <MudText Typo="Typo.caption">@Title</MudText>
                            <MudEnumSelect Style="min-width:120px" TEnum="CustomerListView" ValueChanged="OnChangedListView" Value="Query.ListView" Dense="true" Label="List View">
                                </MudEnumSelect>
                            </div>
                        </div>
                        <div class="flex-grow-1" />

                        <div class="d-flex flex-column justify-end">
                            <div class="d-flex">
                             <MudHidden Breakpoint="Breakpoint.SmAndDown">
                                <MudButton DisableElevation Variant="Variant.Outlined"
                                           Size="Size.Small"
                                           Disabled="@_loading"
                                           OnClick="@(()=>OnRefresh())"
                                           StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Primary"
                                           Style="margin-right: 4px; margin-bottom:4px">@ConstantString.Refresh</MudButton>
                                @if (_canCreate)
                                {
                                    <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.Add"
                                           Size="Size.Small"
                                           Disabled="@_loading"
                                           OnClick="OnCreate"
                                           Style="margin-right: 4px; margin-bottom:4px"
                                           IconColor="Color.Surface">@ConstantString.New</MudButton>
                                    <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                               StartIcon="@Icons.Material.Filled.ContentCopy"
                                               Size="Size.Small"
                                               Disabled="@(_selectedItems.Count!=1)"
                                               OnClick="OnClone"
                                               Style="margin-right: 4px; margin-bottom:4px"
                                               IconColor="Color.Surface">@ConstantString.Clone</MudButton>
                                }
                                @if (_canDelete)
                                {
                                    <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Error"
                                           StartIcon="@Icons.Material.Filled.Delete"
                                           Disabled="@(!(_selectedItems.Count>0))"
                                           Size="Size.Small"
                                           Style="margin-right: 4px; margin-bottom:4px"
                                           OnClick="OnDeleteChecked"
                                           IconColor="Color.Surface">@ConstantString.Delete</MudButton>
                                }
                                @if (_canExport)
                                {
                                    <MudLoadingButton @bind-Loading="_exporting" DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                                  Label="@ConstantString.Export"
                                                  Disabled="@_loading"
                                                  StartIcon="@Icons.Custom.FileFormats.FileExcel"
                                                  Size="Size.Small"
                                                  Style="margin-right: 4px; margin-bottom:4px"
                                                  OnClick="OnExport"
                                                  IconColor="Color.Surface">
                                    @ConstantString.Export
                                    </MudLoadingButton>
                                }
                                @if (_canImport)
                                {
                                    <MudFileUpload T="IBrowserFile" FilesChanged="OnImportData" Accept=".xlsx" Style="margin-top:0px" >
                                        <ButtonTemplate>
                                            <MudButton HtmlTag="label"
                                                   Size="Size.Small"
                                                   Variant="Variant.Outlined"
                                                   Color="Color.Primary"
                                                   Disabled="@_loading"
                                                   StartIcon="@Icons.Material.Filled.Upload"
                                                       for="@context">
                                                @if (_uploading)
                                                {
                                                    <MudProgressCircular  Size="Size.Small" Indeterminate="true" />
                                                    @ConstantString.Uploading
                                                }
                                                else
                                                {
                                                    @ConstantString.Import
                                                }
                                            </MudButton>
                                        </ButtonTemplate>
                                    </MudFileUpload>
                                }
                            </MudHidden>
                             <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                                @if (_canCreate)
                                {
                                    <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.Add"
                                           Size="Size.Small"
                                           Disabled="@_loading"
                                           OnClick="OnCreate"
                                           Style="margin-right: 4px; margin-bottom:4px"
                                           IconColor="Color.Surface">@ConstantString.New</MudButton>
                                }
                                @if (_canDelete)
                                {
                                    <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Error"
                                           StartIcon="@Icons.Material.Filled.Delete"
                                           Disabled="@(!(_selectedItems.Count>0))"
                                           Size="Size.Small"
                                           Style="margin-right: 4px; margin-bottom:4px"
                                           OnClick="OnDeleteChecked"
                                           IconColor="Color.Surface">@ConstantString.Delete</MudButton>
                                }
                            </MudHidden>
                            </div>
                            @if (_canSearch)
                            {
                            <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Value="@Query.Keyword" Placeholder="@ConstantString.Search" Adornment="Adornment.End"
                                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small"></MudTextField>
                            }
                    
                        </div>
                    </div>
            </ToolBarContent>
            <Columns>
                <SelectColumn ShowInFooter="false"></SelectColumn>
                <TemplateColumn CellStyle="width:60px" Title="@ConstantString.Actions" Sortable="false">
                    <CellTemplate>
                        @if (_canEdit || _canDelete)
                        {
                            <MudMenu Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" DisableElevation="true" Size="Size.Small"
                                     Dense="true"
                                     EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Info" AnchorOrigin="Origin.CenterLeft">
                                @if (_canEdit)
                                {
                                    <MudMenuItem OnClick="@(()=>OnEdit(context.Item))">@ConstantString.Edit</MudMenuItem>
                                }
                                @if (_canDelete)
                                {
                                    <MudMenuItem OnClick="@(()=>OnDelete(context.Item))">@ConstantString.Delete</MudMenuItem>
                                }
                            </MudMenu>
                        }
                        else
                        {
                            <MudIconButton Variant="Variant.Filled" DisableElevation="true" 
                                       Disabled="true"
                                       Icon="@Icons.Material.Filled.DoNotTouch"
                                       Size="Size.Small"
                                       Color="Color.Surface">
                                @ConstantString.NoAllowed
                            </MudIconButton>
                        }
                    </CellTemplate>
                </TemplateColumn>
                @*TODO: Define the fields that should be displayed in data table*@
                <PropertyColumn Property="x => x.Name" Title="@L[_currentDto.GetMemberDescription(x=>x.Name)]"> 
   <CellTemplate>
      <div class="d-flex flex-column">
        <MudText Typo="Typo.body2">@context.Item.Name</MudText>
        <MudText Typo="Typo.body2">@context.Item.Description</MudText>
     </div>
    </CellTemplate>
</PropertyColumn>

            </Columns>
            <NoRecordsContent>
                <MudText>@ConstantString.NoRecords</MudText>
            </NoRecordsContent>
            <LoadingContent>
                <MudText>@ConstantString.Loading</MudText>
            </LoadingContent>
            <PagerContent>
                <MudDataGridPager PageSizeOptions="@(new int[]{10,15,30,50,100,500,1000})" />
            </PagerContent>
        </MudDataGrid>



