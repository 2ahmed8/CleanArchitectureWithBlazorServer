@using LazyCache
@using CleanArchitecture.Blazor.Application.Features.Identity.Dto
@using System.Security.Claims
@using Severity = MudBlazor.Severity
@using CleanArchitecture.Blazor.Application.Common.ExceptionHandlers
@using CleanArchitecture.Blazor.Infrastructure.Constants.ClaimTypes
@using System.ComponentModel
@using System.Reflection
@inherits OwningComponentBase
@page "/identity/roles"

@attribute [Authorize(Policy = Permissions.Roles.View)]
@inject IStringLocalizer<Roles> L
<PageTitle>@Title</PageTitle>
<style>
    .mud-table-toolbar {
        height: 120px !important;
    }
</style>
<MudDataGrid @ref="_table"
             FixedHeader="true"
             FixedFooter="false"
             Height="calc(100vh - 300px)"
             Hover="true"
             MultiSelection="true"
             @bind-RowsPerPage="_defaultPageSize"
             @bind-SelectedItems="_selectedItems"
             Loading="@_loading"
             ServerData="@(ServerReload)">
    <ToolBarContent>
        <div class="d-flex align-start flex-grow-1">
            <div class="d-flex gap-4">
                <MudIcon Icon="@Icons.Material.Filled.Groups" Size="Size.Large" />
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.caption">@L["Roles"]</MudText>
                </div>
            </div>
            <div class="flex-grow-1" />
            <div class="d-flex flex-column justify-end">
                <div class="d-flex">
                    <MudHidden Breakpoint="Breakpoint.SmAndDown">
                        <MudButton DisableElevation Variant="Variant.Outlined"
                                    Size="Size.Small"
                                    OnClick="OnRefresh"
                                    Disabled="@_loading"
                                    StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Primary"
                                    Style="margin-right: 4px; margin-bottom:4px">
                             @ConstantString.Refresh
                         </MudButton>
                         @if (_canCreate)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Add"
                                        Size="Size.Small"
                                        OnClick="OnCreate"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">
                                 @ConstantString.New
                             </MudButton>
                        }
                        @if (_canDelete)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Error"
                                        StartIcon="@Icons.Material.Filled.Delete"
                                        Disabled="@(!(_selectedItems.Count > 0))"
                                        OnClick="OnDeleteChecked"
                                        Size="Size.Small"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">
                                 @ConstantString.Delete
                             </MudButton>
                        }

                        @if (_canExport)
                        {
                            <MudButton DisableElevation Variant="Variant.Outlined" Color="Color.Primary"
                                        StartIcon="@Icons.Material.Filled.Download"
                                        Size="Size.Small"
                                        Style="margin-right: 4px; margin-bottom:4px"
                                        IconColor="Color.Surface">
                                 @ConstantString.Export
                             </MudButton>
                        }
                        @if (_canImport)
                        {
                            <MudFileUpload T="IBrowserFile" FilesChanged="OnImportData" Accept=".xlsx" Style="margin-top:0px;">
                                <ButtonTemplate>
                                    <MudButton HtmlTag="label"
                                               Size="Size.Small"
                                               Variant="Variant.Outlined"
                                               Color="Color.Primary"
                                               Disabled="@_loading"
                                               StartIcon="@Icons.Material.Filled.Upload"
                                               for="@context">
                                        @if (_uploading)
                                        {
                                            <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                                            @ConstantString.Uploading
                                        }
                                        else
                                        {
                                            @ConstantString.Import
                                        }
                                    </MudButton>
                                </ButtonTemplate>
                            </MudFileUpload>
                        }
                    </MudHidden>
                    <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                        <MudMenu AnchorOrigin="Origin.BottomLeft" StartIcon="@Icons.Material.Filled.KeyboardCommandKey" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" Label="@L["Action"]" Color="Color.Primary" Variant="Variant.Filled">
                            <MudMenuItem Disabled="@_loading" OnClick="@(OnRefresh)">@ConstantString.Refresh</MudMenuItem>
                            @if (_canCreate)
                            {
                                <MudMenuItem OnClick="OnCreate">@ConstantString.New</MudMenuItem>
                            }
                            @if (_canDelete)
                            {
                                <MudMenuItem OnClick="OnDeleteChecked">@ConstantString.Delete</MudMenuItem>
                            }
                        </MudMenu>
                    </MudHidden>
                </div>
                @if (_canSearch)
                {
                    <MudTextField T="string" Immediate="false" Value="_searchString" FullWidth="false" ValueChanged="@(OnSearch)"
                                  Placeholder="@(L["Search for role name"])" Adornment="Adornment.End"
                                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0 mb-3">
                    </MudTextField>
                }

            </div>
        </div>
    </ToolBarContent>
    <Columns>
        <SelectColumn ShowInFooter="false"></SelectColumn>
        <TemplateColumn CellStyle="width:60px" Title="@ConstantString.Actions" Sortable="false">
            <CellTemplate>
                @if (_canEdit || _canDelete || _canManagePermissions)
                {
                    <MudMenu Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" DisableElevation="true" Size="Size.Small"
                             Dense="true"
                             EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Info" AnchorOrigin="Origin.CenterLeft">
                        @if (_canEdit)
                        {
                            <MudMenuItem OnClick="@(() => OnEdit(context.Item))">@ConstantString.Edit</MudMenuItem>
                        }
                        @if (_canDelete)
                        {
                            <MudMenuItem OnClick="@(() => OnDelete(context.Item))">@ConstantString.Delete</MudMenuItem>
                        }
                        @if (_canManagePermissions)
                        {
                            <MudMenuItem OnClick="@(() => OnSetPermissions(context.Item))">@L["Set Permissions"]</MudMenuItem>
                        }
                    </MudMenu>
                }
                else
                {
                    <MudButton Variant="Variant.Filled" DisableElevation="true"
                               StartIcon="@Icons.Material.Filled.DoNotTouch" IconColor="Color.Secondary" Size="Size.Small"
                               Color="Color.Surface">
                        @ConstantString.NoAllowed
                    </MudButton>
                }
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.Name" Title="@L[_currentDto.GetMemberDescription(x => x.Name)]">
            <CellTemplate>
                <div class="d-flex flex-column">
                    <MudText Typo="Typo.body2">@context.Item.Name</MudText>
                    <MudText Typo="Typo.body2" Class="mud-text-secondary">@context.Item.Description</MudText>
                </div>
            </CellTemplate>
            <FooterTemplate>
                @L["Selected"]: @_selectedItems.Count
            </FooterTemplate>
        </PropertyColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager PageSizeOptions="@(new[] { 10, 15, 30, 50, 100, 500, 1000 })" />
    </PagerContent>
</MudDataGrid>

<_PermissionsDrawer OnAssignAllChanged="OnAssignAllChangedHandler" Waiting="@_processing" OnOpenChanged="OnOpenChangedHandler" Open="_showPermissionsDrawer" Permissions="_permissions" OnAssignChanged="OnAssignChangedHandler"></_PermissionsDrawer>


