@page "/pages/authentication/login"
@inject IAccessTokenProvider TokenProvider
@inject IJSRuntime JS
@inherits OwningComponentBase
@using CleanArchitecture.Blazor.Application.Common.Interfaces.Identity;
@using CleanArchitecture.Blazor.Application.Common.Interfaces.Identity.DTOs;
@using CleanArchitecture.Blazor.Infrastructure.Services.JWT
@using Microsoft.AspNetCore.DataProtection
@using CleanArchitecture.Blazor.Application.Common.Security
@using CleanArchitecture.Blazor.Infrastructure.Constants.Role
@using CleanArchitecture.Blazor.Infrastructure.Constants.User
@using Severity = MudBlazor.Severity
@using CleanArchitecture.Blazor.Server.UI.Pages.Identity.Users
@using CleanArchitecture.Blazor.Application.Common.ExceptionHandlers
@implements IDisposable
@inject IValidationService Validator
@inject IStringLocalizer<Login> L

<PageTitle>@_title</PageTitle>
<AuthorizeView>
    <NotAuthorized Context="auth">
        <MudForm Model="@_model" @ref="@_form" @bind-IsValid="@_success" ValidationDelay="0" Validation="@(Validator.ValidateValue(_model))">
            <MudText Typo="Typo.h4" GutterBottom="true">@L["Sign In"]</MudText>
            <MudText>
                @L["Don't have an account?"] <MudLink Href="/pages/authentication/register">@L["Sign Up"]</MudLink>
            </MudText>
            <MudTextField T="string"
                          @bind-Value="_model.UserName" For="@(() => _model.UserName)"
                          Label="@L["Username"]"
                          Variant="Variant.Outlined"
                          Required="true"
                          OnlyValidateIfDirty="true"
                          Immediate="true"
                          Class="my-6">
            </MudTextField>

            <MudPasswordField @bind-Value="_model.Password" For="@(() => _model.Password)"
                              Label="@L["Password"]"
                              PasswordMode="true"
                              Variant="Variant.Outlined"
                              Required="true">
            </MudPasswordField>

            <div Class="d-flex justify-space-between align-center">
                <MudCheckBox For="@(() => _model.RememberMe)" @bind-Checked="_model.RememberMe" Label="@L["Remember me?"]" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
                <MudLink Href="/pages/authentication/forgot-password">@L["Forgot password?"]</MudLink>
            </div>


            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       Size="Size.Large"
                       Disabled="@(_loading)"
                       ButtonType="ButtonType.Button"
                       OnClick="@(OnSubmit)"
                       FullWidth="true">
                @if (_loading)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2"> @ConstantString.Loading</MudText>
                }
                else
                {
                    <MudText>@L["Sign In"]</MudText>
                }

            </MudButton>
            <div class="d-flex justify-space-around flex-grow-1 my-4 gap-4">
                <MudButton Class="flex-grow-1" OnClick="@(() => SignInExternal("Microsoft"))" Variant="Variant.Filled" StartIcon="@Icons.Custom.Brands.Microsoft" ButtonType="ButtonType.Button"
                           title="Sign in with Microsoft">
                    @ConstantString.Microsoft
                </MudButton>
                <MudButton Class="flex-grow-1" OnClick="@(() => SignInExternal("Google"))" Variant="Variant.Filled" StartIcon="@Icons.Custom.Brands.Google" ButtonType="ButtonType.Button"
                           title="Sign in with Google">
                    @ConstantString.Google
                </MudButton>
            </div>
        </MudForm>
    </NotAuthorized>
    <Authorized>
        <RedirectToHome></RedirectToHome>
        <MudAlert Severity="Severity.Info" Class="mt-8 mud-width-full" Style="max-width:500px;">@L["You are already logged in."]</MudAlert>
    </Authorized>
</AuthorizeView>

